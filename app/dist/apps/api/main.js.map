{"version":3,"file":"main.js","mappings":"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","sources":["webpack://marvel/./apps/api/src/app/app.controller.ts","webpack://marvel/./apps/api/src/app/app.module.ts","webpack://marvel/./apps/api/src/app/app.service.ts","webpack://marvel/./apps/api/src/app/auth/auth.controller.ts","webpack://marvel/./apps/api/src/app/auth/auth.module.ts","webpack://marvel/./apps/api/src/app/auth/auth.service.ts","webpack://marvel/./apps/api/src/app/auth/decorator/get-user.decorator.ts","webpack://marvel/./apps/api/src/app/auth/decorator/index.ts","webpack://marvel/./apps/api/src/app/auth/dto/auth.dto.ts","webpack://marvel/./apps/api/src/app/auth/guard/index.ts","webpack://marvel/./apps/api/src/app/auth/guard/jwt.guard.ts","webpack://marvel/./apps/api/src/app/auth/model/users.entity.ts","webpack://marvel/./apps/api/src/app/auth/model/users.model.ts","webpack://marvel/./apps/api/src/app/auth/strategy/index.ts","webpack://marvel/./apps/api/src/app/auth/strategy/jwt.strategy.ts","webpack://marvel/./apps/api/src/app/user/user.controller.ts","webpack://marvel/./apps/api/src/app/user/user.module.ts","webpack://marvel/./apps/api/src/app/user/user.service.ts","webpack://marvel/external commonjs \"@nestjs/common\"","webpack://marvel/external commonjs \"@nestjs/config\"","webpack://marvel/external commonjs \"@nestjs/core\"","webpack://marvel/external commonjs \"@nestjs/jwt\"","webpack://marvel/external commonjs \"@nestjs/passport\"","webpack://marvel/external commonjs \"@nestjs/swagger\"","webpack://marvel/external commonjs \"argon2\"","webpack://marvel/external commonjs \"class-validator\"","webpack://marvel/external commonjs \"passport-jwt\"","webpack://marvel/external commonjs \"tslib\"","webpack://marvel/webpack/bootstrap","webpack://marvel/./apps/api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { UserModule } from './user/user.module';\n\n@Module({\n  imports: [ ConfigModule.forRoot({ isGlobal: true }),AuthModule, UserModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import { Body, ClassSerializerInterceptor, Controller, Post, UseInterceptors } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\nimport { SignInDto } from './dto/auth.dto';\r\nimport { UsersEntity } from './model/users.entity';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  @UseInterceptors(ClassSerializerInterceptor)\r\n  @Post('signup')\r\n  signup(@Body() dto: UsersEntity) {\r\n    return this.authService.signup(dto);\r\n  }\r\n\r\n  @Post('signin')\r\n  signin(@Body() dto: SignInDto) {\r\n    return this.authService.signin(dto);\r\n  }\r\n}\r\n","import { JwtStrategy } from './strategy';\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [JwtModule.register({})],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n","import { ForbiddenException, Injectable } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as argon from 'argon2';\r\nimport { SignInDto } from './dto';\r\nimport { UsersEntity } from './model/users.entity';\r\nimport { USERS_DB } from './model/users.model';\r\n\r\n@Injectable({})\r\nexport class AuthService {\r\n  constructor(\r\n    private jwt: JwtService,\r\n    private config: ConfigService,\r\n  ) {}\r\n\r\n  async signup(dto: UsersEntity) {\r\n    const user = USERS_DB.find(x => x.name === dto.name);\r\n    if (user) throw new ForbiddenException('Credentials Taken'); \r\n    const password = await argon.hash(dto.password);\r\n    try {\r\n       const newUser = USERS_DB.push({...dto, password});\r\n      return newUser;\r\n    } catch (error) {\r\n          throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async signin(dto: SignInDto) {\r\n    const user = USERS_DB.find(x => x.name === dto.userName);\r\n    if (!user) throw new ForbiddenException('نام یا رمز عبور اشتباه است');\r\n    // const pwMatch = await argon.verify(user.password, dto.password);\r\n    const pwMatch = user.password === dto.password;\r\n    if (!pwMatch) throw new ForbiddenException('نام یا رمز عبور اشتباه است');\r\n    return this.signToken(user.name);\r\n  }\r\n\r\n  async signToken(userName): Promise<{ access_token: string }> {\r\n    const payload = {\r\n      userName,\r\n    };\r\n    // const secret = this.config.get('JWT_SECRET');\r\n    const secret = \"asdfghjkl;123456\";\r\n    const token = await this.jwt.signAsync(payload, {\r\n      expiresIn: '1d',\r\n      secret,\r\n    });\r\n    return {\r\n      access_token: token,\r\n    };\r\n  }\r\n}\r\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\r\n\r\nexport const GetUser = createParamDecorator(\r\n  (data: string | undefined, ctx: ExecutionContext) => {\r\n    const request = ctx.switchToHttp().getRequest();\r\n    if (data) {\r\n      return request.user[data];\r\n    }\r\n    return request.user;\r\n  },\r\n);\r\n","export * from './get-user.decorator';\r\n","import { IsNotEmpty, IsString } from 'class-validator';\r\n\r\nexport class SignInDto {\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  userName: string;\r\n\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  password: string;\r\n\r\n}\r\n","export * from './jwt.guard';\r\n","import { AuthGuard } from '@nestjs/passport';\r\n\r\nexport class JwtGuard extends AuthGuard('jwt') {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\n\r\nexport class UsersEntity {\r\n    @ApiProperty()\r\n    name: string\r\n    @ApiProperty()\r\n    email: string\r\n    @ApiProperty()\r\n    password: string\r\n    @ApiProperty()\r\n    age: number\r\n}\r\n","export const USERS_DB = [\r\n    {\r\n      \"name\": \"niloofar\",\r\n      \"email\": \"niloofar@baam.sadad.co.ir\",\r\n      \"password\": \"123456\",\r\n      \"age\": 30\r\n    },\r\n    {\r\n      \"name\": \"orkide\",\r\n      \"email\": \"orkide@baam.sadad.co.ir\",\r\n      \"password\": \"654321\",\r\n      \"age\": 25\r\n    },\r\n    {\r\n      \"name\": \"roz\",\r\n      \"email\": \"roz@baam.sadad.co.ir\",\r\n      \"password\": \"1qaz\",\r\n      \"age\": 30\r\n    }\r\n  ]","export * from './jwt.strategy';\r\n","import { ConfigService } from '@nestjs/config';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { USERS_DB } from '../model/users.model';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\r\n  constructor(\r\n    config: ConfigService,\r\n  ) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: \"asdfghjkl;123456\",\r\n    });\r\n  }\r\n\r\n  async validate(payload: { userName: string }) {\r\n    const user = USERS_DB.find(x => x.name === payload.userName);\r\n    delete user.password;\r\n    return user;\r\n  }\r\n}\r\n","import { Controller, Get, Param, UseGuards } from '@nestjs/common';\nimport { GetUser } from '../auth/decorator';\nimport { JwtGuard } from '../auth/guard';\nimport { UserService } from './user.service';\n\n@UseGuards(JwtGuard)\n@Controller('user')\nexport class UserController {\n    constructor(private userService: UserService){}\n\n    @Get()\n    getUser(@GetUser() user: any) {\n        console.log('user:   ', user)\n        return this.userService.getUser(user.name);\n    }\n}\n","import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n","import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { USERS_DB } from '../auth/model/users.model';\n\n@Injectable()\nexport class UserService {\n\n    getUser(name: string){\n        const user = USERS_DB.find(x => x.name === name);\n        if (!user) {\n            throw new ForbiddenException('Name Does not exists'); \n        }\n        const cloneUser = JSON.parse(JSON.stringify(user));\n        delete cloneUser.password;\n        return cloneUser;\n    }\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"argon2\");","module.exports = require(\"class-validator\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n    }),\n  );\n  app.enableCors({\n    allowedHeaders: ['content-type', 'Authorization '],\n    origin: 'http://localhost:4200',\n    credentials: true,\n  });\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":["AppController","constructor","appService","getData","this","Get","Controller","AppService","AppModule","Module","imports","ConfigModule","forRoot","isGlobal","AuthModule","UserModule","controllers","providers","message","Injectable","AuthController","authService","signup","dto","signin","UseInterceptors","ClassSerializerInterceptor","Post","Body","UsersEntity","SignInDto","AuthService","JwtModule","register","JwtStrategy","jwt","config","USERS_DB","find","x","name","ForbiddenException","password","argon","hash","push","error","Error","user","userName","signToken","payload","access_token","signAsync","expiresIn","secret","JwtService","ConfigService","GetUser","createParamDecorator","data","ctx","request","switchToHttp","getRequest","IsString","IsNotEmpty","JwtGuard","AuthGuard","super","ApiProperty","PassportStrategy","Strategy","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","validate","UserController","userService","getUser","console","log","UseGuards","UserService","cloneUser","JSON","parse","stringify","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","NestFactory","create","setGlobalPrefix","useGlobalPipes","ValidationPipe","whitelist","enableCors","allowedHeaders","origin","credentials","port","process","env","PORT","listen","Logger","bootstrap"],"sourceRoot":""}